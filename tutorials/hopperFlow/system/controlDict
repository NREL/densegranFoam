/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  5                                     |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
//libs            ("libviscosityModels.so");


//application     interFoam;
application     fcicTwoPhaseEulerFoam;

startFrom       latestTime;
//startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         20;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   0.05;

purgeWrite      0;

writeFormat     ascii;

writePrecision  12;

writeCompression uncompressed;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           0.7;
maxAlphaCo      0.7;

maxDeltaT       0.0005;


functions
{
    orificeFlowRate  // pick your name
    {
         type            surfaceFieldValue;
         libs             ("libfieldFunctionObjects.so");
         fields          (phi);
         writeFields no;
         regionType patch;
         name          orifice;  // put the name of your patch/outlet here
         operation    weightedSum;
         weightField alpha.particles;
    }

}
/*
    fieldAverage1
    {
	type            fieldAverage;
	libs            ("libfieldFunctionObjects.so");
        writeControl    writeTime;
        fields
	(
            U.particles
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }

            U.air
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }

            alpha.particles
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }

            p
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }

            U.air
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }

            alpha.particles
            {
                 mean        on;
	         prime2Mean  off;
	         base        time;
            }

	    p
            {
                 mean        on;
                 prime2Mean  off;
                 base        time;
            }
        );
    }
}
*/
// ************************************************************************* //
